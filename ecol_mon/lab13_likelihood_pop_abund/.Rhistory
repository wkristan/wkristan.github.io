read.table("clipboard",sep="\t", header= T) -> nhat
read.table("clipboard",sep="\t", header= T) -> nhat
read.table("clipboard",sep="\t", header= T) -> phat
library(ggplot2)
View(nhat)
ggplot(nhat, aes(x = N.hat, y = LnLikelihood)) + geom_line()
ggplot(nhat, aes(x = N.hat, y = LnLikelihood)) + geom_line() + geom_hline(yintercept = 437.2-1.92)
ggplot(nhat, aes(x = N.hat, y = LnLikelihood)) + geom_line() + geom_hline(yintercept = 437.2-1.92, col = "red")
ggplot(phat, aes(x = p, y = LnLikelihood)) + geom_line() + geom_hline(yintercept = 437.2-1.92, col = "red")
View(phat)
read.table("clipboard",sep="\t", header= T) -> phat
read.table("clipboard",sep="\t", header= T) -> phat
ggplot(phat, aes(x = p, y = LnLikelihood)) + geom_line() + geom_hline(yintercept = 437.2-1.92, col = "red")
library(rmark)
install.packages("rmark")
install.packages("RMark")
library(RMark)
data("dipper")
View(dipper)
substr(dipper$ch,1,3)
substr(dipper$ch,1,3) -> dipper.ch
table(dipper.ch)
substr(dipper$ch,2,4) -> dipper.ch
table(dipper.ch)
substr(dipper$ch,3,5)
table(substr(dipper$ch,3,5))
table(substr(dipper$ch,2,4))
table(substr(dipper$ch,3,5))
table(substr(dipper$ch,4,6))
table(substr(dipper$ch,5,7))
table(substr(dipper$ch,6,8))
table(substr(dipper$ch,2,4))
table(substr(dipper$ch,1,3))
data(edwards.eberhardt)
library(RMark)
data(edwards.eberhardt)
View(edwards.eberhardt)
read.table("clipboard", sep = "\t", header = T) -> sire.dam.crossed
read.table("clipboard", sep = "\t", header = T) -> sire.dam.crossed
read.table("clipboard", sep = "\t", header = T) -> sire.dam.nested
read.table("clipboard", sep = "\t", header = T) -> sire.dam.nested
View(sire.dam.crossed)
View(sire.dam.nested)
aov(WGAIN ~ Error(SIRE*DAM), data = sire.dam.crossed)
aov(WGAIN ~ Error(SIRE*DAM), data = sire.dam.crossed) -> sd.crossed.aov
summary(sd.crossed.aov)
aov(WGAIN ~ Error(SIRE+DAM), data = sire.dam.crossed) -> sd.crossed.aov
summary(sd.crossed.aov)
sire.dam.crossed$SIRE <- factor(sire.dam.crossed$SIRE)
sire.dam.crossed$DAM <- factor(sire.dam.crossed$DAM)
sire.dam.nested$SIRE <- factor(sire.dam.nested$SIRE)
sire.dam.nested$DAM <- factor(sire.dam.nested$DAM)
aov(WGAIN ~ Error(SIRE+DAM), data = sire.dam.crossed) -> sd.crossed.aov
summary(sd.crossed.aov)
aov(WGAIN ~ Error(SIRE*DAM), data = sire.dam.crossed) -> sd.crossed.aov
summary(sd.crossed.aov)
names(sd.crossed.aov)
names(sd.crossed.aov)
sd.crossed.aov$SIRE
names(sd.crossed.aov$SIRE)
st(sd.crossed.aov$SIRE)
str(sd.crossed.aov$SIRE)
sd.crossed.aov$SIRE$coefficients
sd.crossed.aov$SIRE$residuals
sd.crossed.aov$SIRE$fitted.values
sd.crossed.aov$SIRE$rank
sd.crossed.aov$SIRE$df.residual
summary(sd.crossed.aov)
names(summary(sd.crossed.aov))
summary(sd.crossed.aov)$"Error: SIRE"
summary(sd.crossed.aov)$"Error: SIRE"[1]
summary(sd.crossed.aov)$"Error: SIRE"[[1]]
summary(sd.crossed.aov)$"Error: SIRE"[[2]]
summary(sd.crossed.aov)$"Error: SIRE"$"Mean Sq"
summary(sd.crossed.aov)$"Error: SIRE"
names(summary(sd.crossed.aov)$"Error: SIRE")
str(summary(sd.crossed.aov)$"Error: SIRE")
summary(sd.crossed.aov)$"Error: SIRE"$"Mean Sq"
summary(sd.crossed.aov)$"Error: SIRE"["Mean Sq"]
summary(sd.crossed.aov)$"Error: SIRE"
summary(sd.crossed.aov)$"Error: SIRE"$"Mean Sq"
summary(sd.crossed.aov)$"Error: SIRE"$"Df"
summary(sd.crossed.aov)[[1]]
summary(sd.crossed.aov)[[1]][[1]]
summary(sd.crossed.aov)[[1]][[1]][[3]]
summary(sd.crossed.aov)[[1]]
summary(sd.crossed.aov)[[1]][[1]][[3]]
summary(sd.crossed.aov)[[1]][[1]]
summary(sd.crossed.aov)
summary(sd.crossed.aov) -> sd.crossed.aov.sum
sd.crossed.aov.sum[[1]][[1]][[3]]
sd.crossed.aov.sum[[1]][[1]][[3]] - sd.crossed.aov.sum[[1]][[3]][[3]]
sd.crossed.aov.sum[[1]][[3]][[3]]
sd.crossed.aov.sum[[1]][[3]]
sd.crossed.aov.sum[[1]][[2]]
sd.crossed.aov.sum[[3]][[1]]
sd.crossed.aov.sum[[3]][[1]][[3]]
sd.crossed.aov.sum[[1]][[1]][[3]] - sd.crossed.aov.sum[[3]][[1]][[3]]
(sd.crossed.aov.sum[[1]][[1]][[3]] - sd.crossed.aov.sum[[3]][[1]][[3]])/4
(sd.crossed.aov.sum[[2]][[1]][[3]] - sd.crossed.aov.sum[[3]][[1]][[3]])/10
(sd.crossed.aov.sum[[3]][[1]][[3]] - sd.crossed.aov.sum[[4]][[1]][[3]])/2
sd.crossed.aov.sum[[4]][[1]][[3]]
aov(WGAIN ~ Error(SIRE+DAM), data = sire.dam.nested) -> sd.nested.aov
aov(WGAIN ~ Error(SIRE/DAM), data = sire.dam.nested) -> sd.nested.aov
aov(WGAIN ~ Error(DAM/SIRE), data = sire.dam.nested) -> sd.nested.aov
aov(WGAIN ~ Error(DAM+SIRE), data = sire.dam.nested) -> sd.nested.aov
aov(WGAIN ~ SIRE + Error(DAM), data = sire.dam.nested) -> sd.nested.aov
summary(sd.nested.aov)
(.2578-0.08266)/2
data(wwdo.popan)
library(RMark)
data(wwdo.popan)
data(wwdo.popan)
data(wwdo.09)
wwdo.09
View(wwdo.09)
data(wwdo.10)
View(wwdo.10)
substr(wwdo.09$ch,1,3)
table(substr(wwdo.09$ch,1,3))
table(substr(wwdo.09$ch,2,4))
table(substr(wwdo.09$ch,3,5))
table(substr(wwdo.09$ch,4,6))
install.packages("Rcapture")
library(Rcapture)
library(bunting)
data(bunting)
force(bunting)
View(bunting)
install.packages("compositions")
load("~/Documents/classes/ecological_monitoring/labs/lab12_likelihood_pop_abund/.RData")
seq(270,350) -> nhat
install.packages("logOfGamma")
library(logOfGamma)
gammaln(147 + 163.9363 + 1)
gammaln(147 + 163.9363 + 1) - gammaln(163.9363 + 1)
knitr::opts_chunk$set(echo = TRUE)
obs <- c(76,48,23)
p <- 0.2733682781332553
multi.prob <- c((1-p)*p, p*(1-p), p*p, (1-p)*(1-p))
p <- 0.2733682781332553
multi.prob <- c((1-p)*p, p*(1-p), p*p, (1-p)*(1-p))
library(logOfGamma)
mult.coef <- gammaln(sum(obs) + f00 + 1) - gammaln(f00 +1)
f00 <- 163.936271556499
library(logOfGamma)
mult.coef <- gammaln(sum(obs) + f00 + 1) - gammaln(f00 +1)
sum(c(obs,f00)*log(multi.prob))
mult.coef + sum(c(obs,f00)*log(multi.prob))
loglike <- mult.coef + sum(c(obs,f00)*log(multi.prob))
f00 <- 163.936271556499
nhat <- f00 + sum(obs)
f00s <- seq(140, 180, by = 0.1)
sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(c(obs,x)*log(multi.prob))} )
f00s <- seq(130, 190, by = 0.1)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(c(obs,x)*log(multi.prob))} )
f00s <- seq(130, 190, by = 0.1)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(c(obs,x)*log(multi.prob))} )
loglike.f00s
f00s <- seq(120, 200, by = 0.1)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(c(obs,x)*log(multi.prob))} )
loglike.f00s
f00s <- seq(120, 200, by = 0.1)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(c(obs,x)*log(multi.prob))} )
loglike.f00s
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = logLike)) + geom_line()
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = -logLike)) + geom_line()
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - max(-logLike))) + geom_line()
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - min(-logLike))) + geom_line()
f00s <- seq(120, 210, by = 0.1)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(c(obs,x)*log(multi.prob))} )
loglike.f00s
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - min(-logLike))) + geom_line()
f00s <- seq(120, 210, by = 0.1)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(c(obs,x)*log(multi.prob))} )
-loglike.f00s - min(-loglike.f00s)
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = logLike)) + geom_line()
ggplot(nhat.loglike, aes(x = nhat, y = logLike)) + geom_line()
ggplot(nhat.loglike, aes(x = nhat, y = -logLike)) + geom_line()
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - min(-logLike))) + geom_line()
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - min(-logLike))) + geom_line() + geom_hline(yintercept = 1.92)
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - min(-logLike))) + geom_line() + geom_hline(yintercept = 1.92, color = "red") + geom_vline(xintercept = c(276.41, 349.61))
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - min(-logLike))) + geom_line() + geom_hline(yintercept = 1.92, color = "red") + geom_vline(xintercept = c(276.41, 349.61), color = "green")
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - min(-logLike))) + geom_line() + geom_hline(yintercept = 1.92, color = "red")
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - min(-logLike))) + geom_line() + geom_hline(yintercept = 1.92, color = "red") + geom_vline(xintercept = c(276.41, 349.61), color = "green")
ggplot(nhat.loglike, aes(x = nhat, y = logLike)) + geom_line() + labs(title="Likelihood function")
ggplot(nhat.loglike, aes(x = nhat, y = logLike)) + geom_line() + labs(title="Log Likelihood function")
ggplot(nhat.loglike, aes(x = nhat, y = -logLike)) + geom_line() + labs(title="Negative log likelihood function")
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - min(-logLike))) + geom_line() + labs(title= "-LogLikelihood - minimum of -LogLikelihood")
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - min(-logLike))) + geom_line() + labs(title= "-LogLikelihood with minimum set to 0")
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - min(-logLike))) + geom_line() + geom_hline(yintercept = 1.92, color = "red") + labs(title = "Horizontal line at 1.92")
ggplot(nhat.loglike, aes(x = nhat, y = -logLike - min(-logLike))) + geom_line() + geom_hline(yintercept = 1.92, color = "red") + geom_vline(xintercept = c(276.41, 349.61), color = "green") + labs(title = "Upper and lower 95% CI in green")
f00s <- seq(120, 210, by = 0.1)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(c(obs,x)*log(multi.prob))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
ps <- seq(0.25, 0.33, by = 0.01)
loglike.ps <- sapply(ps, FUN = function(x) {gammaln(sum(obs) + f00 + 1) - gammaln(f00 + 1) + sum(c(obs,f00)*log(c((1-x)*x, x*(1-x), x*x, (1-x)*(1-x))))} )
data.frame(p = ps, logLike = loglike.ps) -> ps.loglike
ggplot(ps.loglike, aes(x = p, y = logLike)) + geom_line()
ps <- seq(0.25, 0.33, by = 0.001)
loglike.ps <- sapply(ps, FUN = function(x) {gammaln(sum(obs) + f00 + 1) - gammaln(f00 + 1) + sum(c(obs,f00)*log(c((1-x)*x, x*(1-x), x*x, (1-x)*(1-x))))} )
data.frame(p = ps, logLike = loglike.ps) -> ps.loglike
ggplot(ps.loglike, aes(x = p, y = logLike)) + geom_line()
ps <- seq(0.22, 0.33, by = 0.001)
loglike.ps <- sapply(ps, FUN = function(x) {gammaln(sum(obs) + f00 + 1) - gammaln(f00 + 1) + sum(c(obs,f00)*log(c((1-x)*x, x*(1-x), x*x, (1-x)*(1-x))))} )
data.frame(p = ps, logLike = loglike.ps) -> ps.loglike
ggplot(ps.loglike, aes(x = p, y = logLike)) + geom_line()
ps <- seq(0.23, 0.33, by = 0.001)
loglike.ps <- sapply(ps, FUN = function(x) {gammaln(sum(obs) + f00 + 1) - gammaln(f00 + 1) + sum(c(obs,f00)*log(c((1-x)*x, x*(1-x), x*x, (1-x)*(1-x))))} )
data.frame(p = ps, logLike = loglike.ps) -> ps.loglike
ggplot(ps.loglike, aes(x = p, y = logLike)) + geom_line()
ps <- seq(0.23, 0.32, by = 0.001)
loglike.ps <- sapply(ps, FUN = function(x) {gammaln(sum(obs) + f00 + 1) - gammaln(f00 + 1) + sum(c(obs,f00)*log(c((1-x)*x, x*(1-x), x*x, (1-x)*(1-x))))} )
data.frame(p = ps, logLike = loglike.ps) -> ps.loglike
ggplot(ps.loglike, aes(x = p, y = logLike)) + geom_line()
ggplot(ps.loglike, aes(x = p, y = logLike)) + geom_line() + labs(title = "Log Likelihood function")
ggplot(ps.loglike, aes(x = p, y = -logLike)) + geom_line() + labs(title = "Negative log Likelihood function")
ggplot(ps.loglike, aes(x = p, y = -logLike - min(-logLike))) + geom_line() + labs(title = "-logLikelihood with minimum set to 0")
ggplot(ps.loglike, aes(x = p, y = -logLike - min(-logLike))) + geom_line() + geom_vline(yintercept = 1.92, color = "red") + labs(title = "Horizontal line at 1.92")
ggplot(ps.loglike, aes(x = p, y = -logLike - min(-logLike))) + geom_line() + geom_hline(yintercept = 1.92, color = "red") + labs(title = "Horizontal line at 1.92")
ggplot(ps.loglike, aes(x = p, y = -logLike - min(-logLike))) + geom_line() + geom_hline(yintercept = 1.92, color = "red") + geom_line(xintercept = c(0.239324,0.309274), color = "green") + labs(title = "Upper and lower 95% CI in green")
ggplot(ps.loglike, aes(x = p, y = -logLike - min(-logLike))) + geom_line() + geom_hline(yintercept = 1.92, color = "red") + geom_vline(xintercept = c(0.239324,0.309274), color = "green") + labs(title = "Upper and lower 95% CI in green")
obs
dmultinom(c(76,48,23))
help(dnultinom)
help(dmultinom)
dmultinom(c(76,48,23,164), p = c((1-p)*p, p*(1-p), p^2, (1-p)^2))
dmultinom(c(76,48,23,163.9), p = c((1-p)*p, p*(1-p), p^2, (1-p)^2))
knitr::opts_chunk$set(echo = TRUE)
p <- 0.2733682781332553
multi.prob <- function(p) {c((1-p)*p, p*(1-p), p*p, (1-p)*(1-p))}
multi.prob(p)
p <- 0.2733682781332553
p_ch <- function(p) {c((1-p)*p, p*(1-p), p*p, (1-p)*(1-p))}
p_ch(p) -> multi.prob
f00 <- 163.936271556499
nhat <- f00 + sum(obs)
library(logOfGamma)
mult.coef <- gammaln(sum(obs) + f00 + 1) - gammaln(f00 +1)
obs <- c(76,48,23)
p <- 0.2733682781332553
p_ch <- function(p) {c((1-p)*p, p*(1-p), p*p, (1-p)*(1-p))}
f00 <- 163.936271556499
nhat <- f00 + sum(obs)
library(logOfGamma)
mult.coef <- gammaln(sum(obs) + f00 + 1) - gammaln(f00 +1)
freqs_ch <- function(f00) {c(76,48,23,f00)}
loglike <- mult.coef + sum(freqs(f00)*log(p_ch(p)))
freqs_ch <- function(f00) {c(76,48,23,f00)}
loglike <- mult.coef + sum(freqs_ch(f00)*log(p_ch(p)))
f00s <- seq(120, 210, by = 0.1)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = logLike)) + geom_line()
f00s <- seq(120, 210, by = 0.1)
loglike.f00s.orig <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
loglike.f00s <- sapply(f00s, FUN = function(x) {dmultinom(freqs_ch(x), p = p_ch(p))})
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
f00s <- seq(120, 210, by = 0.1)
loglike.f00s.orig <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
loglike.f00s <- sapply(f00s, FUN = function(x) {dmultinom(freqs_ch(x), p = p_ch(p))})
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
loglike.f00s
f00s <- seq(120, 210, by = 0.1)
loglike.f00s.orig <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
loglike.f00s <- sapply(f00s, FUN = function(x) {dmultinom(freqs_ch(x), p = p_ch(p))})
data.frame(nhat = f00s + sum(obs), likelihood = loglike.f00s) -> nhat.likelihood
library(ggplot2)
ggplot(nhat.likelihood, aes(x = nhat, y = likelihood)) + geom_line()
library(ggplot2)
ggplot(nhat.likelihood, aes(x = nhat, y = log(likelihood))) + geom_line()
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = loglike)) + geom_line()
f00s <- seq(120, 210, by = 0.1)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
f00s <- seq(120, 210, by = 1)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
f00s <- seq(120, 210, by = 1)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = loglike)) + geom_line()
p <- 0.2733682781332553
p_ch <- function(p) {c((1-p)*p, p*(1-p), p*p, (1-p)*(1-p))}
f00s <- seq(120, 210, by = 1)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = loglike)) + geom_line()
f00s <- seq(120, 210, by = 1)
p_of_ch <- p_ch(p)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_of_ch))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = loglike)) + geom_line()
freqs_ch <- function(x) {c(76,48,23,x)}
loglike <- mult.coef + sum(freqs_ch(f00)*log(p_ch(p)))
f00s <- seq(120, 210, by = 1)
p_of_ch <- p_ch(p)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_of_ch))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = loglike)) + geom_line()
freqs_ch(f00)
f00s
sum(obs)
freqs_ch <- function(x) {c(76,48,23,x)}
loglike <- mult.coef + sum(freqs_ch(f00)*log(p_ch(p)))
loglike.f00s.orig
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = logLike)) + geom_line()
f00s <- seq(120, 210, by = 1)
p_of_ch <- p_ch(p)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = logLike)) + geom_line()
sapply(f00s, FUN = function(x) {dmultinom(freqs_ch(x), p = p_ch(p))})
sapply(f00s, FUN = function(x) {dmultinom(freqs_ch(x), p = p_ch(p))}) -> multinoms
data.frame(f00s,multinoms)
data.frame(nhat = f00s + sum(obs),multinoms) -> multinom.p
ggplot(multinom.p, aes(x = nhat, y = multinoms)) + geom_line()
ggplot(multinom.p, aes(x = nhat, y = log(multinoms))) + geom_line()
ggplot(multinom.p, aes(x = nhat, y = -log(multinoms))) + geom_line()
ggplot(multinom.p, aes(x = nhat, y = -log(multinoms) + min(log(multinoms)))) + geom_line()
ggplot(multinom.p, aes(x = nhat, y = -log(multinoms) + max(log(multinoms)))) + geom_line()
ggplot(multinom.p, aes(x = nhat, y = -log(multinoms) + min(-log(multinoms)))) + geom_line()
ggplot(multinom.p, aes(x = nhat, y = -log(multinoms) - min(-log(multinoms)))) + geom_line()
f00s <- seq(120, 210, by = 0.1)
p_of_ch <- p_ch(p)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
data.frame(nhat = f00s + sum(obs),multinoms) -> multinom.p
sapply(f00s, FUN = function(x) {dmultinom(freqs_ch(x), p = p_ch(p))}) -> multinoms
data.frame(nhat = f00s + sum(obs),multinoms) -> multinom.p
ggplot(multinom.p, aes(x = nhat, y = -log(multinoms) - min(-log(multinoms)))) + geom_line()
f00s <- seq(120, 210, by = 0.5)
p_of_ch <- p_ch(p)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
data.frame(nhat = f00s + sum(obs),multinoms) -> multinom.p
sapply(f00s, FUN = function(x) {dmultinom(freqs_ch(x), p = p_ch(p))}) -> multinoms
data.frame(nhat = f00s + sum(obs),multinoms) -> multinom.p
ggplot(multinom.p, aes(x = nhat, y = -log(multinoms) - min(-log(multinoms)))) + geom_line()
f00s <- seq(120, 210, by = 1)
p_of_ch <- p_ch(p)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
sapply(f00s, FUN = function(x) {dmultinom(freqs_ch(x), p = p_ch(p))}) -> multinoms
data.frame(nhat = f00s + sum(obs),multinoms) -> multinom.p
ggplot(multinom.p, aes(x = nhat, y = -log(multinoms) - min(-log(multinoms)))) + geom_line()
f00s <- seq(120, 210, by = 0.1)
p_of_ch <- p_ch(p)
loglike.f00s <- sapply(f00s, FUN = function(x) {gammaln(sum(obs) + x + 1) - gammaln(x + 1) + sum(freqs_ch(x)*log(p_ch(p)))} )
data.frame(nhat = f00s + sum(obs), logLike = loglike.f00s) -> nhat.loglike
library(ggplot2)
ggplot(nhat.loglike, aes(x = nhat, y = logLike)) + geom_line()
fact(10.1)
f(10.1)
combn(10.1)
combn(10.1,2)
combn(10.1,20)
help(gammaln)
help(gammalog)
help(loggamma)
help(lngamma)
help(gamma)
lgamma(147+163.94+1)
lgamma(310.94+1)
lgamma(310.94+1) - lgamma(163.94+1)
f <- function(x) (lgamma(147 + x + 1) - lgamma(x + 1) + 76*(1-0.2734)*0.2734 + 48*0.2734*(1-0.2734) + 23*0.2734^2 + x*(1-0.2734)^2)
library(rootSolve)
multiroot(f - 437.19857 - 1.92, c(270,351))
f <- function(x) (lgamma(147 + x + 1) - lgamma(x + 1) + 76*(1-0.2734)*0.2734 + 48*0.2734*(1-0.2734) + 23*0.2734^2 + x*(1-0.2734)^2 - 437.19857 + 1.92)
multiroot(f, c(270,351))
f <- function(x) (lgamma(147 + x + 1) - lgamma(x + 1) + 76*(1-0.2734)*0.2734 + 48*0.2734*(1-0.2734) + 23*0.2734^2 + x*(1-0.2734)^2 + + 1.92)
multiroot(f, c(270,351))
f <- function(x) (lgamma(147 + x + 1) - lgamma(x + 1) + 76*(1-0.2734)*0.2734 + 48*0.2734*(1-0.2734) + 23*0.2734^2 + x*(1-0.2734)^2 + 437.19857 + 1.92)
multiroot(f, c(270,351))
f <- function(x) (lgamma(147 + x + 1) - lgamma(x + 1) + 76*(1-0.2734)*0.2734 + 48*0.2734*(1-0.2734) + 23*0.2734^2 + x*(1-0.2734)^2 + 437.19857 - 1.92)
multiroot(f, c(270,351))
curve(f, 270,351)
f <- function(x) (lgamma(147 + x + 1) - lgamma(x + 1) + 76*(1-0.2734)*0.2734 + 48*0.2734*(1-0.2734) + 23*0.2734^2 + x*(1-0.2734)*(1-0.2734))
curve(f, 270,351)
f <- function(x) (lgamma(147 + x + 1) - lgamma(x + 1) + 76*log((1-0.2734)*0.2734) + 48*log(0.2734*(1-0.2734)) + 23*log(0.2734^2) + x*log((1-0.2734)*(1-0.2734)))
curve(f, 270,351)
curve(f + 147, 270,351)
f <- function(x) (lgamma(147 + (x-147) + 1) - lgamma((x-147) + 1) + 76*log((1-0.2734)*0.2734) + 48*log(0.2734*(1-0.2734)) + 23*log(0.2734^2) + (x-147)*log((1-0.2734)*(1-0.2734)))
curve(f, 270,351)
f <- function(x) (lgamma(147 + (x-147) + 1) - lgamma((x-147) + 1) + 76*log((1-0.2734)*0.2734) + 48*log(0.2734*(1-0.2734)) + 23*log(0.2734^2) + (x-147)*log((1-0.2734)*(1-0.2734)) - 437.19857)
curve(f, 270,351)
f <- function(x) (-(lgamma(147 + (x-147) + 1) - lgamma((x-147) + 1) + 76*log((1-0.2734)*0.2734) + 48*log(0.2734*(1-0.2734)) + 23*log(0.2734^2) + (x-147)*log((1-0.2734)*(1-0.2734)) - 437.19857))
curve(f, 270,351)
f <- function(x) (-(lgamma(147 + (x-147) + 1) - lgamma((x-147) + 1) + 76*log((1-0.2734)*0.2734) + 48*log(0.2734*(1-0.2734)) + 23*log(0.2734^2) + (x-147)*log((1-0.2734)*(1-0.2734)) - 437.19857) - 1.92)
curve(f, 270,351)
multiroot(f, c(270,351))
f <- function(x) (lgamma(147 + (x-147) + 1) - lgamma((x-147) + 1) + 76*log((1-0.2734)*0.2734) + 48*log(0.2734*(1-0.2734)) + 23*log(0.2734^2) + (x-147)*log((1-0.2734)*(1-0.2734)) - 437.19857)
multiroot(1.92+f, c(270,351))
multiroot(-f, c(270,351))
multiroot(f, c(270,351))
curve(f, 270,351)
f <- function(x) (lgamma(147 + (x-147) + 1) - lgamma((x-147) + 1) + 76*log((1-0.2734)*0.2734) + 48*log(0.2734*(1-0.2734)) + 23*log(0.2734^2) + (x-147)*log((1-0.2734)*(1-0.2734)))
p <- 0.2734
f <- function(x) (lgamma(147 + (x-147) + 1) - lgamma((x-147) + 1) + 76*log((1-p)*p) + 48*log(p*(1-p)) + 23*log(p^2) + (x-147)*log((1-p)*(1-p)))
curve(f, 270,351)
neg.f <- function(x) (-f)
neg.f <- function(x) (-f + 437.19857)
curve(neg.f, 270,351)
f <- function(x) -(lgamma(147 + (x-147) + 1) - lgamma((x-147) + 1) + 76*log((1-p)*p) + 48*log(p*(1-p)) + 23*log(p^2) + (x-147)*log((1-p)*(1-p))-437.19857)
f <- function(x) -(lgamma(147 + (x-147) + 1) - lgamma((x-147) + 1) + 76*log((1-p)*p) + 48*log(p*(1-p)) + 23*log(p^2) + (x-147)*log((1-p)*(1-p))-437.19857)-1.92
curve(f, 270,351)
f <- function(x) -(lgamma(147 + (x-147) + 1) - lgamma((x-147) + 1) + 76*log((1-p)*p) + 48*log(p*(1-p)) + 23*log(p^2) + (x-147)*log((1-p)*(1-p)))
curve(f, 270,351)
f <- function(x) -(lgamma(147 + (x-147) + 1) - lgamma((x-147) + 1) + 76*log((1-p)*p) + 48*log(p*(1-p)) + 23*log(p^2) + (x-147)*log((1-p)*(1-p))) + 437.19857
curve(f, 270,351)
f <- function(x) -(lgamma(147 + (x-147) + 1) - lgamma((x-147) + 1) + 76*log((1-p)*p) + 48*log(p*(1-p)) + 23*log(p^2) + (x-147)*log((1-p)*(1-p))) + 437.19857 - 1.92
curve(f, 270,351)
multiroot(f, c(270,351))
f00 <- 163.94
phat <- function(p) -(lgamma(147 + f00 + 1) - lgamma(f00 + 1) + 76*log((1-p)*p) + 48*log(p*(1-p)) + 23*log(p^2) + f00*log((1-p)*(1-p))) + 437.19857 - 1.92
multiroot(phat, c(0.1,0.6))
curve(phat, 0.1, 0.5)
multiroot(phat, c(0.1,0.6))
curve(phat, 0.2, 0.32)
curve(phat, 0.2, 0.33)
curve(phat, 0.2, 0.34)
curve(phat, 0.21, 0.34)
curve(phat, 0.21, 0.34, xlab = "phat", ylab = "-logLikelihood")
library(MASS)
help(pmultinom)
??Multinomial
install.packages("Rcapture")
library(Rcapture)
data(hare)
hare
as.matrix(c(0,0,1,38),c(0,1,0,55),c(0,1,1,21),c(1,0,0,34),c(1,0,1,14),c(1,1,0,19),c(1,1,1,4))
rbind(c(0,0,1,38),c(0,1,0,55),c(0,1,1,21),c(1,0,0,34),c(1,0,1,14),c(1,1,0,19),c(1,1,1,4))
rbind(c(0,0,1,38),c(0,1,0,55),c(0,1,1,21),c(1,0,0,34),c(1,0,1,14),c(1,1,0,19),c(1,1,1,4)) -> ex.data
closed.Mtb(ex.data, dfreq=T)
closedp.Mtb(ex.data, dfreq=T)
closedp(ex.data, dfreq=T)
closedp(ex.data, dfreq=T)$parameters
install.packages("RMark")
library(RMark)
example("mark")
example("mark")
View(dipper)
