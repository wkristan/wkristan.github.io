proj[ , -1] <- 0
proj
for(i in seq(1,20)) as.matrix(urban) %*% proj[,i] -> proj[ , i+1]
proj
proj -> project.hy0
project.hy0[4,1]
project.hy0[4,1] <- 0
for(i in seq(1,20)) as.matrix(urban) %*% project.hy0[,i] -> project.hy0[ , i+1]
project.hy0
project.hy0[4,1] <- 36
project.hy0[1,1] <- 0
project.hy0
for(i in seq(1,20)) as.matrix(urban) %*% project.hy0[,i] -> project.hy0[ , i+1]
project.hy0
urban.brnb <- urban
urban.brnb
urban.brnb[3,4] <- 0.1*urban.brnb[4,4]
urban.brnb
urban.brnb[4,4] <- 0.9*urban.brnb[4,4]
urban.brnb
for(i in seq(1,20)) as.matrix(urban.brnb) %*% project.brnb[,i] -> project.brnb[ , i+1]
project.brnb <- project.urban
project.brnb <- proj
project.brnb
for(i in seq(1,20)) as.matrix(urban.brnb) %*% project.brnb[,i] -> project.brnb[ , i+1]
project.brnb
urban.eig
urban.eig[1,] %*% as.matrix(urban)
urban.eig$vectors[1,] %*% as.matrix(urban)
urban
U <- eig(urban)
U <- eigen(urban)
U <- eigen(urban)$vectors
U
abs(Re(U[,1]))
abs(Re(U[,1])) -> u
solve(Conj(U))
solve(Conj(U)) -> V
v <- abs(Re(V[1,]))
v
s <- v %o% u
s
s[urban ==0]
s[urban ==0] <- 0
s
urban
eigen(urban)$values[1]
eigen(urban)$values[1] -> lambda
urban/lambda
urban/lambda -> urban.lambda
s * urban.lambda -> urban.elast
urban.elast
sum(urban.elast)
unlist(urban.elast)
unlist(urban.elast)[!= 0]
unlist(urban.elast)[unlist(urban.elast) > 0]
data.frame(unlist(urban.elast)[unlist(urban.elast) > 0])
data.frame(elast = unlist(urban.elast)[unlist(urban.elast) > 0])
s
v %o% u
v
u
v*u
v[2] * u[1]
v[2] * u[2]
v[2] * u[3]
v
u
v/sum(v)
u/sum(u)
s
urban.elast
pd.breed.fec.br
read.table("clipboard", sep = "\t", header = T)
read.table("clipboard", sep = "\t", header = T) -> loggerhead
read.table("clipboard", sep = "\t", header = T) -> loggerhead
loggerhead
read.table("clipboard", sep = "\t", header = F) -> loggerhead
read.table("clipboard", sep = "\t", header = F) -> loggerhead
loggerhead
loggerhead[7,] <- loggerhead[7,] + loggerhead[8,]
loggerhead
loggerhead[-8,]
loggerhead[-8,] -> loggerhead
loggerhead
eigen(loggerhead)
urban.lambda
eigen(urban)
V
U
urban
urban
seq(0.7,0.86, by = 0.01)
seq(0.92,1, by = 0.001)
seq(0.92,1, by = 0.001)  -> s.ad
sapply(s.ad, function(i) eigen(urban[1,4] <- i))
sapply(s.ad, function(i) eigen(urban[1,4] <- i)$values[1])
urban
urban[1,4]
urban[4,4]
urban[4,4] <- s.ad[1]
urban
sapply(s.ad, function(i) eigen(urban[1,4] <- i)$values[1])
urban[4,4] <- 0.96
sapply(s.ad, function(i) eigen(urban[4,4] <- i)$values[1])
unlist(urban)
unlist(urban) -> urban.vect
matrix(urban.vect, rows = 4)
matrix(urban.vect, nrow = 4)
length(urban.vect)
urban.vect[16]
urban.vect[-16]
urban.vect[-16] -> urban.vect
matrix(c(urban.vect,s.ad[1]), nrow = 4)
sapply(s.ad, function(i) eigen(matrix(c(urban.vect,i), nrow = 4))$values[1])
sapply(s.ad, function(i) eigen(matrix(c(urban.vect,i), nrow = 4))$values[1]) -> urban.lambdas
data.frame(s.ad, lambdas = urban.lambdas)
data.frame(s.ad, lambdas = urban.lambdas) -> urban.lambdas
library(ggplot2)
ggplot(urban.lambdas, aes(x = s.ad, y = lambdas)) + geom_point()
ggplot(urban.lambdas, aes(x = s.ad, y = lambdas)) + geom_point()
seq(0.1,1, by = 0.001)  -> s.ad
sapply(s.ad, function(i) eigen(matrix(c(urban.vect,i), nrow = 4))$values[1]) -> urban.lambdas
urban.lambdas
data.frame(s.ad, lambdas = urban.lambdas) -> urban.lambdas
ggplot(urban.lambdas, aes(x = s.ad, y = lambdas)) + geom_point()
seq(0.5,1, by = 0.001)  -> s.ad
sapply(s.ad, function(i) eigen(matrix(c(urban.vect,i), nrow = 4))$values[1]) -> urban.lambdas
data.frame(s.ad, lambdas = urban.lambdas) -> urban.lambdas
ggplot(urban.lambdas, aes(x = s.ad, y = lambdas)) + geom_point()
urban.lambdas
Re(urban.lambdas$lambdas)
Re(urban.lambdas$lambdas) -> urban.lambdas$lambdas
ggplot(urban.lambdas, aes(x = s.ad, y = lambdas)) + geom_point()
ggplot(urban.lambdas, aes(x = s.ad, y = lambdas)) + geom_line()
sapply(s.ad, function(i) eigen(matrix(c(urban.vect,i), nrow = 4))$values[1]) -> urban.lambdas
urban.lambdas
ggplot(urban.lambdas, aes(x = s.ad, y = lambdas)) + geom_line()
library(ggplot2)
ggplot(urban.lambdas, aes(x = s.ad, y = lambdas)) + geom_line()
data.frame(s.ad, lambdas = urban.lambdas) -> urban.lambdas
Re(urban.lambdas$lambdas) -> urban.lambdas$lambdas
ggplot(urban.lambdas, aes(x = s.ad, y = lambdas)) + geom_line()
urban
unlist(urban)
unlist(urban) -> urban.vect
urban.vect[-13]
urban.vect[-13] -> urban.vect.fec
fec.seq <- seq(0.05,1.5, by = 0.01)
fec.seq
sapply(fec.seq, function(i) eigen(matrix(c(urban.vect.fec[1:12],i, urban.vect.fec[13:15]), nrow = 4))$values[1]) -> urban.lambdas
urban.lambdas
data.frame(Fecundity = fec.seq, lambdas = urban.lambdas) -> urban.lambdas
Re(urban.lambdas$lambdas) -> urban.lambdas$lambdas
ggplot(urban.lambdas, aes(x = s.ad, y = lambdas)) + geom_line()
ggplot(urban.lambdas, aes(x = Fecundity, y = lambdas)) + geom_line()
library(ggplot2)
ggplot(urban.lambdas, aes(x = Fecundity, y = lambdas)) + geom_line()
ggplot(urban.lambdas, aes(x = s.ad, y = lambdas)) + geom_line()
data.frame(Fecundity = fec.seq, lambdas = urban.lambdas) -> urban.fec.lambdas
Re(urban.lambdas$lambdas) -> urban.lambdas$lambdas
data.frame(s.ad, lambdas = urban.lambdas) -> urban.sad.lambdas
sapply(s.ad, function(i) eigen(matrix(c(urban.vect,i), nrow = 4))$values[1]) -> urban.lambdas
unlist(urban) -> urban.vect
urban.vect
urban.vect[-16] -> urban.vect
sapply(s.ad, function(i) eigen(matrix(c(urban.vect,i), nrow = 4))$values[1]) -> urban.lambdas
data.frame(s.ad, lambdas = urban.lambdas) -> urban.sad.lambdas
Re(urban.sad.lambdas$lambdas) -> urban.sad.lambdas$lambdas
ggplot(urban.sad.lambdas, aes(x = s.ad, y = lambdas)) + geom_line()
ggplot(urban.fec.lambdas, aes(x = Fecundity, y = lambdas)) + geom_line()
urban.fec.lambdas
names(urban.fec.lambdas)
names(urban.fec.lambdas)[,3] <- lambdas
names(urban.fec.lambdas)[,3] <- "lambdas"
names(urban.fec.lambdas)[,3] <- c("lambdas")
names(urban.fec.lambdas)[3] <- c("lambdas")
View(urban.fec.lambdas)
ggplot(urban.fec.lambdas, aes(x = Fecundity, y = lambdas)) + geom_line()
View(loggerhead)
seq(0.7, 0.9, by = 0.01)
seq(0.7, 0.9, by = 0.01) -> lh.ad.surv
seq(70, 90, by = 1) -> lh.ad.fec
unlist(loggerhead)
unlist(loggerhead) -> lh.unlist
lh.unlist[-49]
lh.unlist[-49] -> lh.unlist.surv
lh.unlist[-71] -> lh.unlist.fec
lh.unlist.fec
lh.unlist.surv
lh.unlist.fec
lh.unlist[-43] -> lh.unlist.fec
lh.unlist.fec
sapply(lh.ad.surv, function(i) eigen(matrix(c(lh.unlist.surv,i), nrow = 7))$values[1]) -> lh.sad.lambdas
lh.sad.lambdas
sapply(lh.ad.fec, function(i) eigen(matrix(c(lh.unlist.fec[1:42],i,lh.unlist.fec[43:48]), nrow = 7))$values[1]) -> lh.fec.lambdas
lh.fec.lambdas
Re(lh.fec.lambdas)
Re(lh.fec.lambdas) -> lh.fec.lambdas
Re(lh.sad.lambdas) -> lh.sad.lambdas
data.frame(lh.fec.lambdas, lh.sad.lambdas)
data.frame(Fecundity = lh.ad.fec, Survival = lh.ad.surv, lambdas.fec, lambdas.surv)
data.frame(Fecundity = lh.ad.fec, Survival = lh.ad.surv, lambdas.fec = lh.fec.lambdas, lambdas.surv = lh.sad.lambdas)
data.frame(Fecundity = lh.ad.fec, Survival = lh.ad.surv, lambdas.fec = lh.fec.lambdas, lambdas.surv = lh.sad.lambdas) -> lh.fec.surv.lambdas
ggplot(lh.fec.surv.lambdas, aes(x = Fecundity, y = lambdas.fec)) + geom_line()
ggplot(lh.fec.surv.lambdas, aes(x = Fecundity, y = lambdas.fec)) + geom_line() + scale_y_continuous("Lambda")
breaks <- seq(0.92, 0.98, by = 0.01)
ggplot(lh.fec.surv.lambdas, aes(x = Fecundity, y = lambdas.fec)) + geom_line() + scale_y_continuous("Lambda", limits = c(0.9, 1), breaks = breaks)
ggplot(lh.fec.surv.lambdas, aes(x = Fecundity, y = lambdas.fec)) + geom_line() + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks)
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line() + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks)
seq(79.1, 80.1, by = 0.01) -> lh.ad.fec.sens
sapply(lh.ad.fec.sens, function(i) eigen(matrix(c(lh.unlist.fec[1:42],i,lh.unlist.fec[43:48]), nrow = 7))$values[1]) -> lh.fec.sens.lambdas
Re(lh.fec.sens.lambdas)
View(lh.fec.surv.lambdas)
seq(79.9, 80.1, by = 0.01) -> lh.ad.fec.sens
sapply(lh.ad.fec.sens, function(i) eigen(matrix(c(lh.unlist.fec[1:42],i,lh.unlist.fec[43:48]), nrow = 7))$values[1]) -> lh.fec.sens.lambdas
Re(lh.fec.sens.lambdas)
Re(lh.fec.sens.lambdas) -> lh.fec.sens.lambdas
data.frame(lh.fec.surv.lambdas, Fecundity.sens = lh.fec.sens.lambdas)
data.frame(lh.fec.surv.lambdas, Fecundity.sens = lh.fec.sens.lambdas) -> lh.fec.surv.lambdas
names(lh.fec.surv.lambdas)
names(lh.fec.surv.lambdas)[5] <- lambdas.fec.sens
names(lh.fec.surv.lambdas)[5] <- "lambdas.fec.sens"
data.frame(Fecundity.sens = lh.ad.fec.sens, lh.fec.surv.lambdas) -> lh.fec.surv.lambdas
ggplot(lh.fec.surv.lambdas, aes(x = Fecundity.sens, y = lambdas.fec.sens)) + geom_line() + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks)
ggplot(lh.fec.surv.lambdas, aes(x = Fecundity.sens, y = lambdas.fec.sens)) + geom_line() + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + scale_x_continuous("Fecundity")
rm(killer, killer.lambda, killer.test, lambdas.test, owl)
View(pd.breed.fec.br)
View(pd.breed.fec.juv)
rm(proj, project.brnb, project.hy0)
View(loggerhead)
library(ggplot2)
ggplot(lh.fec.surv.lambdas, aes(x = Fecundity.sens, y = lambdas.fec.sens)) + geom_line() + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + scale_x_continuous("Fecundity")
ggplot(lh.fec.surv.lambdas, aes(x = Fecundity.sens, y = lambdas.fec.sens)) + geom_line() + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + scale_x_continuous("Fecundity")
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line() + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks)
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line() + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red")
U.lh <- eigen(loggerhead)$vectors
u.lh <- abs(Re(U[,1]))
Re(U[,1])
U[,1]
V <- solve(U)
V
v <- abs(Re(V[1,]))
v %*% w
v %*% u
v %o% u
v %o% u -> s
v.lh %o% u.lh -> s.lh
V.lh <- solve(U.lh)
v.lh <- abs(Re(V.lh[1,]))
s.lh <- v%o%u
s.lh
U.lh <- eigen(loggerhead)$vectors
U.lh
u.lh <- abs(Re(U.lh[,1]))
V.lh <- solve(Conj(U.lh))
v.lh <- abs(Re(V.lh[1,]))
v.lh %o% u.lh
v.lh %o% u.lh -> s.lh
s.lh[loggerhead == 0]
loggerhead == 0
s.lh[loggerhead == 0] <- 0
s.lh
eigen(loggerhead)$values[1]
Re(eigen(loggerhead)$values[1]) ->
lambda.lh
lambda.lh
loggerhead/lambda.lh
s.lh * loggerhead/lambda.lh
s.lh * loggerhead/lambda.lh -> loggerhead.elast
hoggerhead.elast
loggerhead.elast
-0.268*0.8098 + 0.945
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line() + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green")
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(width = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green")
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green")
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + theme(xlabel = "Adult survival")
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + theme(axis.title.x = "Adult survival")
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival")
s
s.lh
v.lh
w.lh
u.lh
w.lh[7]
u.lh[7]
u.lh[7] * v.lh[7]
sapply(w.lh, function(i) v.lh * i)
sapply(u.lh, function(i) v.lh * i)
v.lh %*% u.lh
v.lh
w.lh
u.lh
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945)
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(x = lh.fec.surv.lambdas$Survival, y = lh.fec.surv.lambdas$lambdas.surv, xend = 0.8089, yend = 0.945)
lh.fec.surv.lambdas
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(x = lh.fec.surv.lambdas$Survival[1:11], y = lh.fec.surv.lambdas$lambdas.surv[1:11], xend = 0.8089, yend = 0.945)
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[1:11,], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945))
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[1:11,], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "cyan")
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[c(1,3,5,7,9,11),], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "cyan")
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[c(1,5,9,11),], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "cyan")
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[c(1,5,9,11),], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "blue")
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[c(1,5,9,11),], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "blue", size = 1.5)
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[c(1,5,9,11),], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "gray", size = 1.5)
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[c(1,5,9,11),], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "yellow", size = 1.5)
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[c(1,6,11),], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "yellow", size = 1.5)
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + geom_abline(intercept = 0.72797, slope = 0.268, color = "green") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[c(1,6,11),], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "orange", size = 1.5)
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[c(1,6,11),], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "orange", size = 1.5)
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[c(1,6,11),], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "orange")
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[c(1,6,11),], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "darkgreen")
ggplot(lh.fec.surv.lambdas, aes(x = Survival, y = lambdas.surv)) + geom_line(size = 2) + scale_y_continuous("Lambda", limits = c(0.92, 0.98), breaks = breaks) + geom_vline(xintercept = 0.8089, color = "red") + xlab("Adult survival") + geom_segment(data = lh.fec.surv.lambdas[c(1,6,11),], aes(x = Survival, y = lambdas.surv, xend = 0.8089, yend = 0.945), color = "green")
urban
matrix(0,nrow = 4, ncol = 8)
matrix(0,nrow = 4, ncol = 8) -> 4by8
matrix(0,nrow = 4, ncol = 8) -> FourByEight
matrix(0,nrow = 4, ncol = 4) -> FourByFour
cbind(urban, FourByEight)
rbind(cbind(urban, FourByEight), cbind(FourByFour, ecotonal, FourByFour), cbind(FourByEight, desert))
read.csv("desert_raven_matrix.csv")
read.csv("desert_raven_matrix.csv") -> desert
read.csv("ecotonal_raven_matrix.csv") -> ecotonal
rbind(cbind(urban, FourByEight), cbind(FourByFour, ecotonal, FourByFour), cbind(FourByEight, desert))
help("rbind")
rbind(cbind(urban, FourByEight), cbind(FourByFour, ecotonal, FourByFour), cbind(FourByEight, desert), make.row.names = F)
rbind(cbind(urban, FourByEight), cbind(FourByFour, ecotonal, FourByFour), cbind(FourByEight, desert), make.row.names = T)
rbind(cbind(urban, FourByEight), cbind(FourByFour, ecotonal, FourByFour), cbind(FourByEight, desert))
rbind(cbind(urban, FourByEight), cbind(FourByFour, ecotonal, FourByFour))
cbind(FourByFour, ecotonal, FourByFour)
rbind2(cbind(urban, FourByEight), cbind(FourByFour, ecotonal, FourByFour))
colnames(FourByFour) <- c("HY", "JUV", "NB", "BR")
colnames(FourByEight) <- c("HY", "JUV", "NB", "BR")
colnames(FourByEight) <- c("HY", "JUV", "NB", "BR", "HY","JUV", "NB", "BR")
rbind(cbind(urban, FourByEight), cbind(FourByFour, ecotonal, FourByFour))
rbind(cbind(urban, FourByEight), cbind(FourByFour, ecotonal, FourByFour), cbind(FourByEight, desert))
rbind(cbind(urban, FourByEight), cbind(FourByFour, ecotonal, FourByFour), cbind(FourByEight, desert)) -> regional
eigen(regional)
as.matrix(regional)
as.matrix(regional) -> regional
eigen(regional)
v.lh
v.lh/min(v.lh)
w.lh
u.lh
66.975*u.lh/u.lh[2]
sum(u.lh)
matrix(c(0.394,2,0.006,.8), nrow = 2, byrow = T)
matrix(c(0.394,2,0.006,.8), nrow = 2, byrow = T) -> ex.lefk
eigen(ex.lefk)
0.4*(1-0.4)/(1-0.4^2)
0.4^2*(1-.4)/(1-0.4^2)
matrix(c(0.286,2,0.114,.8), nrow = 2, byrow = T) -> ex.lefk
eigen(ex.lefk)
library(ggplot2)
read.table("clipboard", sep = "\t", header = T) -> corr.ex
read.table("clipboard", sep = "\t", header = T) -> corr.ex
read.table("clipboard", sep = "\t", header = T) -> corr.ex
read.table("clipboard", sep = "\t", header = T) -> corr.ex
read.table("clipboard", sep = "\t", header = T) -> corr.ex
read.table("clipboard", sep = "\t", header = T) -> corr.ex
read.table("clipboard", sep = "\t", header = T) -> corr.ex
read.table("clipboard", sep = "\t", header = T) -> corr.ex
read.table("clipboard", sep = "\t", header = T) -> corr.ex
View(corr.ex)
View(corr.ex)
read.table("clipboard", sep = "\t", header = T) -> corr.ex
read.table("clipboard", sep = "\t", header = T) -> corr.ex
ggplot(corr.ex, aes(x = Age, y = Fecundity)) + geom_point()
ggplot(corr.ex, aes(x = Age, y = Survival)) + geom_point()
ggplot(corr.ex, aes(x = Fecundity, y = Survival)) + geom_point()
read.table("clipboard", sep = "\t", header = T) -> nocorr.ex
read.table("clipboard", sep = "\t", header = T) -> nocorr.ex
ggplot(nocorr.ex, aes(x = Age, y = Fecundity)) + geom_point()
read.table("clipboard", sep = "\t", header = T) -> nocorr.ex
ggplot(nocorr.ex, aes(x = Age, y = Fecundity)) + geom_point()
ggplot(corr.ex, aes(x = Age, y = Survival)) + geom_point()
ggplot(nocorr.ex, aes(x = Age, y = Survival)) + geom_point()
ggplot(nocorr.ex, aes(x = Fecundity, y = Survival)) + geom_point()
det(desert - diag(1))
desert
as.matrix(desert)
det(as.matrix(desert))
det(as.matrix(desert) - diag(1))
help(diag)
det(as.matrix(desert) - diag(x = 1, 4,4))
eigen(desert)
eigen(desert) -> desert.eigen
(1-desert.eigen$values[1])
W <- urban.eig$vectors
w <- abs(Re(W[,1]))
V <- solve(Conj(W))
v <- abs(Re(V[1,]))
s <- v%o%w
s
s[urban == 0] <- 0
s
(1-desert.eigen$values[1])/s
(1-desert.eigen$values[1])/s + desert
W <- desert.eig$vectors
W <- desert.eigen$vectors
w <- abs(Re(W[,1]))
V <- solve(Conj(W))
v <- abs(Re(V[1,]))
s[desert == 0] <- 0
s <- v%o%w
s[desert == 0] <- 0
s
(1-desert.eigen$values[1])/s + desert
(1-desert.eigen$values[1])/s
s
desert.eigen$values[1]
desert.eigen$values[1]/s
(1-desert.eigen$values[1])/s
(1-desert.eigen$values[1])/s + desert
data.frame(Size = c(10,100), Birds = c(10,1000))
data.frame(Size = c(10,100), Birds = c(10,1000)) -> df
plot(df)
plot(df, type = "line")
plot(df, type = "both")
View(urban)
matrix(c(0, 0.4, 0, 0, 0, 0, 0.8, 0, 0, 0, 0.7, 0.1, 0.78, 0, 0, 0.96))
matrix(c(0, 0.4, 0, 0, 0, 0, 0.8, 0, 0, 0, 0.7, 0.1, 0.78, 0, 0, 0.96), nrow = 4)
choose(read.csv())
read.csv(choose())
read.csv(file.choose())
as.matrix(read.csv(file.choose()))
as.matrix(read.csv(file.choose())) -> urb.test
eigen(urb.test)
read.csv(file.choose()) -> urban.test
eigen(urban.test)
urban.eig$vectors[,1]
urban.eig$vectors[,1] / sum(urban.eig$vectors[,1])
v
w
urb.test
urban.eig
abs(urban.eig$vectors[,1])
abs(urban.eig$vectors[,1]) -> w
solve(w)
solve(W)
solve(urban.eig$vectors)
solve(urban.eig$vectors) -> V
abs(V[1,])
abs(V[1,]) -> v
v%*%w
View(loggerhead)
rnorm(100,0,1)
rnorm(100,0,1) -> rand.norm
exp(rand.norm)/(1+exp(rand.norm))
rnorm(100,1,1) -> rand.norm
exp(rand.norm)/(1+exp(rand.norm))
log(1)
log(0.9/0.1)
rnorm(100,2.19722,1) -> rand.norm
exp(rand.norm)/(1+exp(rand.norm))
pnorm(seq(-3,3, by = 0.1))
rnorm(100,2.19722,3) -> rand.norm
rand.norm
exp(rand.norm)/(1+exp(rand.norm))
rnorm(100,2.19722,4) -> rand.norm
exp(rand.norm)/(1+exp(rand.norm))
dnorm(seq(-8,11, by = 0.1),2.19722,4) -> dens.norm
dens.norm
exp(dens.norm)/(1+exp(dens.norm))
exp(seq(-8,11, by = 0.1))/(1+exp(seq(-8,11, by = 0.1))) -> bin.prob
plot(bin.prob, dens.norm)
plot(bin.prob, dens.norm, type = "l")
urban
c(27, 11, 26, 36) -> init.vect
seq(1:20) -> yrs
sapply(yrs, FUN = function(x) {urban %*% init.vect})
sapply(yrs, FUN = function(x) {urban %*% t(init.vect)})
urban %*% init.vect
init.vect
urban
as.matrix(urban) %*% init.vect
sapply(yrs, FUN = function(x) {as.matrix(urban) %*% init.vect})
for(i in 1:20, {as.matrix(urban) %*% init.vect)
for(i in c(1:20), {as.matrix(urban) %*% init.vect})
for(i in seq(1:20), {as.matrix(urban) %*% init.vect})
for(i in seq(1:20) {as.matrix(urban) %*% init.vect})
for(i in seq(1:20)) {as.matrix(urban) %*% init.vect})
for(i in seq(1,20)) urban %*% init.vect
for(i in seq(1,20)) as.matrix(urban) %*% init.vect
matrix(0, nrow = 4, ncol = 20) -> project.urban; project.urban
cbind(init.vect, project.urban) -> project.urban; project.urban
sapply(yrs, FUN = function(x) {as.matrix(urban) %*% init.vect[yrs] -> init.vect[yrs+1]})
init.vect[1]
sapply(yrs, FUN = function(x) {as.matrix(urban) %*% init.vect[,yrs] -> init.vect[,yrs+1]})
sapply(yrs, FUN = function(x) {as.matrix(urban) %*% t(init.vect[,yrs]) -> init.vect[,yrs+1]})
sapply(yrs, FUN = function(x) {as.matrix(urban) %*% t(init.vect[,yrs])})
as.matrix(urban) %*% t(init.vect[,1])
as.matrix(urban) %*% t(init.vect[,1])
init.vect
sapply(yrs, FUN = function(x) {as.matrix(urban) %*% project.urban[,yrs] -> project.urban[,yrs+1]})
project.urban
for(i in seq(1:20)) as.matrix(urban) %*% project.urban[,i] -> project.urban[,i+1]
project.urban
urban
W
eigen(urban) -> W
w <- abs(Re(W[,1]))
eigen(urban) -> W$vectors
w <- abs(Re(W[,1]))
eigen(urban)$vectors -> W
w <- abs(Re(W[,1]))
w
solve(Conj(W)) -> V
v <- abs(Re(V[1,]))
s <- v%o%w
s
(urban > 0) * s
urban.elast
