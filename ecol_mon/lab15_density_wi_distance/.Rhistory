read.csv("dists_for_r.csv")
read.csv("dists_for_r.csv") -> dists
library(unmarked)
yDat <- formatDistData(dists, distCol="dist", transectNameCol="Plot.type", dist.breaks=c(0,20,40,60,80))
yDat
covs <- data.frame(habitat=c("Burned","Unburned"))
covs
umf <- unmarkedFrameDS(y=as.matrix(yDat), siteCovs=covs, survey="line", dist.breaks=c(0,20,40,60,80,100), tlength=c(250, 300))
yDat <- formatDistData(dists, distCol="dist", transectNameCol="Plot.type", dist.breaks=c(0,20,40,60,80,100))
yDat
yDat <- formatDistData(dists, distCol="dist", transectNameCol="Plot.type", dist.breaks=c(0,20,40,60,80,100), unitsIn="m")
yDat <- formatDistData(dists, distCol="dist", transectNameCol="Plot.type", dist.breaks=c(0,20,40,60,80,100), unitsIn="m")
umf <- unmarkedFrameDS(y=as.matrix(yDat), siteCovs=covs, survey="line", dist.breaks=c(0,20,40,60,80,100), tlength=c(250, 300), unitsIn="m")
umf
summary(umf)
hist(umf)
dist.null <- distsamp(~1~1, umf)
dist.null
names(dist.null)
dist.null <- distsamp(~1, umf)
dist.null <- distsamp(~1 ~1, umf)
dist.null <- distsamp(~1 ~habitat, umf)
dist.null
exp(3.922)
backTransform(dist.null, type="state")
dist.null <- distsamp(~1 ~1, umf)
backTransform(dist.null, type="state")
read.csv("dists.csv")
read.csv("dists.csv") -> dists
rm(covs,ydat)
rm(covs,yDat)
rm(dist.null)
rm(umf)
library(unmarked)
View(dists)
formatDistData(dists, distCol="Distance", transectNameCol="Plot.type",dist.breaks=c(0,20,40,60,80,100))
formatDistData(dists, distCol="Distance", transectNameCol="Plot.type",dist.breaks=c(0,20,40,60,80,100)) -> yDat
hist(yDat)
covs <- dists$Plot.type
covs
umf <- unmarkedFrameDS(y=as.matrix(yDat), siteCovs=covs, survey="line", dist.breaks=c(0,20,40,60,80,100),tlength=c(312,220), unitsIn="m")
umf <- unmarkedFrameDS(y=as.matrix(yDat), siteCovs=data.frame(covs), survey="line", dist.breaks=c(0,20,40,60,80,100),tlength=c(312,220), unitsIn="m")
data.frame(habitat=levels(covs))
data.frame(habitat=levels(covs)) -> covs
umf <- unmarkedFrameDS(y=as.matrix(yDat), siteCovs=covs, survey="line", dist.breaks=c(0,20,40,60,80,100),tlength=c(312,220), unitsIn="m")
umf
summary(umf)
hist(umf)
null <- distsamp(~1~1, umf)
null
backTransform(null)
backTransform(null, type="state")
exp(3.98)
predict(null, type="state")$Predicted
umf <- unmarkedFrameDS(y=as.matrix(yDat), siteCovs=covs, survey="line", dist.breaks=c(0,20,40,60,80,100),tlength=c(312,220), unitsIn="m")
null <- distsamp(~1~1, umf)
null
null$Predicted
null <- distsamp(~1~1, umf, output="density", unitsOut="m")
null <- distsamp(~1~1, umf, output="density")
null
predict(null, type="state")$Predicted
predict(null, type="state")$Predicted / 10000
predict(null, type="state")$Predicted / 100^2
umf <- unmarkedFrameDS(y=as.matrix(yDat), siteCovs=covs, survey="line", dist.breaks=c(0,20,40,60,80,100),tlength=c(250,200), unitsIn="m")
null <- distsamp(~1~1, umf)
null
predict(null, type="state")$Predicted / 100^2
umf
umf <- unmarkedFrameDS(y=as.matrix(yDat), siteCovs=covs, survey="line", dist.breaks=c(0,20,40,60,80,100),tlength=c(278, 187), unitsIn="m")
null <- distsamp(~1~1, umf)
predict(null, type="state")$Predicted / 100^2
umf
null
2*predict(null, type="state")$Predicted / 100^2
null <- distsamp(~habitat~habitat, umf)
null <- distsamp(~1~1, umf)
dens.hab <- distsamp(~habitat~habitat, umf)
predict(dens.hab, type="state")
predict(dens.hab, type="state")$Predicted
2*predict(dens.hab, type="state")$Predicted / 100^2
backTransform(dens.hab, type="det")
dens.hab
backTransform(dens.hab, type="state")
predict(dens.hab, type="state")
predict(dens.hab, type="det")
backTransform(linearComb(dens.hab['det'], c(1,5)))
exp(3.485)
exp(3.485-0.311)
backTransform(linearComb(dens.hab['det'], c(1,2)))
backTransform(linearComb(dens.hab['det'], c(0,2)))
backTransform(linearComb(dens.hab['det'], c(1,1)))
